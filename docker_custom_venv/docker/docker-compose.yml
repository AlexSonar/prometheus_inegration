version: "3"

#-------------------------------------------------------------
# docker-compose
# Automated solution for integrating continuous monitoring systems Prometheus
# for variables definitions read doc
#
# Copyleft (c) by Alex Sonar 2021
#-------------------------------------------------------------

services:

  prometheus:
    image: ${CUSTOM_OS_PROMETHEUS_VENV}
    ports:
      - "${PORT_PROMETHEUS_MONITORING_SERVER}:9000"
      - "${PORT_PROMETHEUS_MONITORING_ALT_SERVER}:9090"
      - "${PORT_PROMETHEUS_NODE_EXPORTER}:9100"
      - "${PORT_PROMETHEUS_ALERT_MANAGER}:9093"
      - "${PORT_PROMETHEUS_BASE_CLUSTER_N0}:5000"
      - "${PORT_PROMETHEUS_BASE_CLUSTER_N1}:5001"
      - "${PORT_PROMETHEUS_BASE_CLUSTER_N2}:5002"
      - "${PORT_PROMETHEUS_GRAFANA}:3000"
      - "${PORT_PROMETHEUS_WEB_PROX}:80"
      - "${PORT_PROMETHEUS_WEB_PROX_LTS}:443"
      - "${PORT_PROMETHEUS_SSH}:22"
    volumes:
      - ${VOL_PROMETHEUS_CORE}:/etc/prometheus/
      - ${VOL_PROMETHEUS_DATA}:/prometheus
      - ${VOL_PROMETHEUS_PROX}:/etc/nginx/

    environment:
      - NGINX_HOST=${URI_PROMETHEUS}.${ENV_PROMETHEUS}.net
      - NGINX_PORT=80
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-storage.local.target-heap-size=524288000'
    restart: unless-stopped
    networks:
      - prometheus-monitor-backend-${ENV_PROMETHEUS}
      - prometheus-monitor-frontend-${ENV_PROMETHEUS}
    labels:
      io.prometheus.service.name:  "prometheus-${ENV_PROMETHEUS}"
      io.prometheus.service.group: "monitoring-${ENV_PROMETHEUS}"
      io.prometheus.service.title: "${PROMETHEUS_SERVICE_TITLE}"

networks:
  prometheus-monitor-backend-$ENV_PROMETHEUS:
    driver: ${PROMETHEUS_NETWORK_TYPE}
  prometheus-monitor-frontend-$ENV_PROMETHEUS:
    driver: ${PROMETHEUS_NETWORK_TYPE}